#ifndef __MOUSE_H
#define __MOUSE_H

#include "bitmap.h"

#define DELAY_US    20000


#define KBC_CMD_REG 0x64
#define IBF 		BIT(1)
#define SET_COMMAND 0xED

#define MOUSE_IRQ		12
#define WRITE_TO_MOUSE 	0xD4
#define ACK				0xFA
#define NACK			0xFE
#define ERROR 			0xFC
#define RESEND 			0xFE
#define STAT_REQ		0xE9
#define SET_STREAM_MODE	0xEA
#define DIS_STREAM_MODE 0xF5
#define ENA_DATA_PACKS  0xF4

/**
 * @struct Mouse
 * @brief struct to keep mouse information
 */
typedef struct{
	long int cornerX, cornerY;
	long int middleX, middleY;
	int middleSize;
	Bitmap* icon;
}Mouse;

/**
 * @brief returns the game mouse struct if it exists, returns a new one if it didn't exist
 */
Mouse* getMouse();

/**
 * @brief subscribes the mouse interruptions
 */
int subscribeMouseInt();

/**
 * @brief unsubscribes the mouse interruptions
 */
int unsubscribeMouseInt();

/**
 * @brief reads a char from the KBC
 */
int readFromKBC(char* readValue);

/**
 * @brief writes a command to mouse
 */
int writeToMouse(unsigned long cmd);

/**
 * @brief enables mouse stream mode
 */
int enableStreamMode();

/**
 * @brief disables mouse stream mode
 */
int disableStreamMode();

/**
 * @brief enables mouse sending data packets mode
 */
int enableSendingDataPackets();

/**
 * @briefs gets a data byte from the packet generated by the mouse
 */
int getPacket(char* packet);

/**
 * @brief updates the mouse position given the last generated packet
 */
void updateMousePosition(char packet[3]);

#endif /* __MOUSE_H */
